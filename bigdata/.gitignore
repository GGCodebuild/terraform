# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log

# Ignore any .tfvars files that are generated automatically for each Terraform run. Most
# .tfvars files are managed as part of configuration and so should be included in
# version control.
#
# example.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

*.idea/
*.terraform/
*.terraform.lock.hcl
*.bsp/

*.zip
*tar.gz
*.pkl
.csv
~/

*etl_process-1.0-py3.10.egg/
*etl_process.egg-info
*dist/
*.egg
*.mod
*.sum
*terraform-provider-spc

# *envs

*temp

# Include override files you do wish to add to version control using negated pattern
#
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

.metals
.vscode

hadoop_file/
package/
__pycache__

krb5.conf
svc_aws_datasync_prd.keytab
terraform-provider-spc-custom

Jenkinsfile